% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fRLM_additive.R
\name{timeScaler_ff}
\alias{timeScaler_ff}
\title{Time Scaler Function Factory}
\usage{
timeScaler_ff(time, min = 0, max = 1)
}
\arguments{
\item{time}{A numeric vector representing the time data.}

\item{min}{A numeric value representing the minimum value to which the time data should be scaled. Default is 0.}

\item{max}{A numeric value representing the maximum value to which the time data should be scaled. Default is 1.}
}
\value{
A function that can be used to scale the time data either to the specified range or back to its original scale.
}
\description{
Returns a function to scale a time dataset down and back up.
The returned function can either standardize the time data to the specified
min and max values or scale it back to its original scale.
}
\details{
The function first checks that the input parameters are of the correct type and that min is less than max.
It then computes the minimum and maximum values of the input time data and defines a new function, \code{timeScaler},
that can be used to scale the time data either to the specified range or back to its original scale.
The \code{timeScaler} function takes two parameters: \code{time}, a numeric vector representing the time data to be scaled,
and \code{original_scale}, a logical value indicating whether the time data should be scaled back to its original scale.
If \code{original_scale} is TRUE, the \code{timeScaler} function will scale the \code{time} data back to its original scale.
If \code{original_scale} is FALSE, the \code{timeScaler} function will standardize the \code{time} data to the specified \code{min} and \code{max} values.
}
\note{
\enumerate{
\item Error Handling: The function includes error handling to check that the \code{time}, \code{min}, and \code{max} parameters are numeric
and that \code{min} is less than \code{max}.
\item Scaling: The \code{timeScaler} function returned by \code{timeScaler_ff} scales the \code{time} data to the range 0-1 before
scaling it either to the specified \code{min} and \code{max} values or back to its original scale.
}
}
\examples{
# Example usage of the timeScaler_ff function
time = 1:10
timeScaler <- timeScaler_ff(time, min=0, max = 1)
time_scaled <- timeScaler(time)
time_unscaled <- timeScaler(time_scaled, original_scale=TRUE)
print(paste("Time scaled: ", time_scaled))
print(paste("Time unscaled: ", time_unscaled))

}
