% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.R
\name{funcReg}
\alias{funcReg}
\title{FUNCTIONAL LIFECOURSE MODEL}
\usage{
funcReg(y, X, grid = seq(0, 1, l = ncol(X)), covariates = NULL, L = 6)
}
\arguments{
\item{y}{The output vector.}

\item{X}{A n times M matrix containing the n functions evaluated at points specified in grid.}

\item{grid}{A vector of the points at which the functions are evaluated.}

\item{covariates}{A matrix of covariates.}

\item{L}{Number of B-splines basis to approximate omega.}
}
\value{
An list containing estimates for alpha, delta, beta, gamma, sigma2, and omega.
}
\description{
Estimate a functional regression,
}
\section{y_i = delta int X_i(t) * omega(t) dt + C_i' alpha + eps_i}{
where omega(t) is a weight function, omega(t) > 0 and in omega(t) dt = 1.
}

\examples{
library(fRLM)
library(dplyr)

# 1) Setup data:
head(toy) # toy example dataset
toy2 <- toy
toy2[, 4] <- round( ( toy[, 4] - 10 ) / 30, 2 ) # i. rescale age:
y <- toy2 \%>\% group_by(id) \%>\% summarise(outcome = mean(outcome) ) \%>\% pull(outcome) # extract outcome:
t_obs <- toy2 \%>\% group_by(id) \%>\% summarise(age = list(age)) \%>\%  pull(age) # extract age
exposure <- toy2 \%>\% group_by(id) \%>\% summarise(exposure = list(exposure)) \%>\%  pull(exposure) # extract exposure

# 2) Fit gaussian processes:
gpfitList <- lapply( 1:length(y), function(i) gpFit( t_obs[[i]], exposure[[i]] ) )
grid <- seq(0,1, l = 150 )
condMu <- t( sapply( gpfitList, predict, tnew = grid ) )

# 3) Frequentist Estimation:
fit <- funcReg( y, condMu, grid, L = 5 )
bootfit <- bootFunReg( y, condMu, grid, L = 5 )
plot(bootfit)
}
