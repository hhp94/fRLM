% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fRLM_lpfr.R
\name{fRLM_lpfr}
\alias{fRLM_lpfr}
\title{fRLM Function}
\usage{
fRLM_lpfr(
  data,
  id,
  time,
  exposures,
  outcome,
  family = "gaussian",
  bounded_exposures = FALSE,
  controls = NULL,
  L = 4,
  K = 5,
  grid = seq(0, 1, l = 150),
  ...
)
}
\arguments{
\item{data}{A tidy dataframe containing the data.}

\item{id}{A string representing the identifier variable in the dataframe.}

\item{time}{A string representing the time variable in the dataframe, at what time the outcome or exposures were measured.}

\item{exposures}{A character vector of strings representing the exposure variables in the dataframe. For now limited to length 1.}

\item{outcome}{A string representing the outcome variable in the dataframe.}

\item{family}{A string representing the family. Either "gaussian" or "binary".}

\item{bounded_exposures}{A boolean vector specifying whether the exposure should be bounded between 0 and 1. For now of length 1.}

\item{controls}{A character vector of strings representing the control variables in the dataframe. Default is NULL.}

\item{L}{An integer representing the number of basis functions. Default is 4.}

\item{K}{An integer representing the number of knots for each basis function. Default is K=5.}

\item{...}{Additional arguments passed to the \code{rstan::stan} function.}
}
\value{
A list containing the fitted model and other relevant information.
}
\description{
Wrapper function that estimates a Functional Regression Linear Model (fRLM) with a given set of predictors.
}
\details{
The \code{outcome}and \code{controls} must be the same (repeated) for all time stamps for each unit. See the examples below.
}
\examples{

library(fRLM)
library(dplyr)

data(toy)

# Gaussian outcome
fit <- fRLM_lpfr(
  data = toy,
  id="id",  # string, name of the subject identifier
  exposures = "exposure", # string, the variable name of the exposures (for now, one)
  outcome="outcome", # string, the variable name of the outcome
  time = "age", # string, the variable name of the time at which measures were taken
  warmup= 500,
  iter=1000,
  chains=4
)

plot(fit)
w = predict(fit)


# Binary outcome and bounded exposure (between 0 and 1)
toy <- toy \%>\% group_by(id) \%>\% mutate(outcome_binary = rbinom(1,1,1/(1+exp(-outcome)))) \%>\% ungroup()

fit_binary <- fRLM_lpfr(
  data = toy,
  id="id",  # string, name of the subject identifier
  exposures = "exposure", # string, the variable name of the exposures (for now, one)
  outcome="outcome_binary", # string, the variable name of the outcome
  family="binary",
  time = "age",
  bounded_exposures = TRUE,
  warmup= 500,
  iter=1000,
  chains=4
)

plot(fit_binary)
w_binary = predict(fit_binary)
}
